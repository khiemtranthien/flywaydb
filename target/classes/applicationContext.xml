<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/data/jpa
	http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
			</list>
		</property>
	</bean>

	<jpa:repositories base-package="com.sample.repository" />

	<!-- need for @Autowired - inject bean -->
	<context:annotation-config />

	<!-- scan all class with @Component annotation -->
	<context:component-scan
		base-package="com.sample.entity,
		com.sample.endpoint,
		com.sample.service,
		com.sample.service.impl" />

	<!-- DataSource -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/sample" />
		<property name="username" value="root" />
		<property name="password" value="admin" />
	</bean>

	<!-- Entity Manager Factory for Spring Data JPA -->
	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="showSql" value="false" />
		<property name="generateDdl" value="false" />
		<property name="database" value="MYSQL" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<!-- spring based scanning for entity classes -->
		<property name="packagesToScan">
			<array>
				<value>com.sample.entity</value>
			</array>
		</property>
	</bean>

	<!-- Transaction Manager for Spring Data JPA -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Flyway DB -->
	<bean id="flyway" class="com.sample.system.FlywayMigration"
		init-method="migrateDatabase">
		<property name="migrateDataSource" ref="dataSource" />
		<property name="enableMigration">
			<value type="java.lang.Boolean">${flyway.migration.enable}</value>
		</property>
		<property name="baseline">
			<value type="java.lang.Boolean">${flyway.migration.is.baseline}</value>
		</property>
		<property name="migrateScriptPrefix" value="${flyway.migration.script.prefix}" />
		<property name="migrateScriptSeparator" value="${flyway.migration.script.separator}" />
		<property name="migrateScriptSuffix" value="${flyway.migration.script.suffix}" />
		<property name="migrateTable" value="${flyway.migration.table}" />
	</bean>

</beans>

